name: Spring Boot CI/CD to k3s

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: CI - Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd:latest .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd:latest

  cd:
    name: CD - Deploy to k3s
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find deployment.yml and service.yml files
        id: find_files
        run: |
          DEPLOYMENT_PATH=$(find . -type f -name "deployment.yml" | head -n 1)
          SERVICE_PATH=$(find . -type f -name "service.yml" | head -n 1)
          echo "deployment.yml: $DEPLOYMENT_PATH"
          echo "service.yml: $SERVICE_PATH"
          if [ -z "$DEPLOYMENT_PATH" ] || [ -z "$SERVICE_PATH" ]; then
            echo "One or both files not found!"
            exit 1
          fi
          echo "::set-output name=deployment::$DEPLOYMENT_PATH"
          echo "::set-output name=service::$SERVICE_PATH"

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ${{ steps.find_files.outputs.deployment }}
          kubectl apply -f ${{ steps.find_files.outputs.service }}